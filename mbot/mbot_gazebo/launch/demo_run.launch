<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find mbot_gazebo)/worlds/rc_world/rc_world.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- 加载机器人模型描述参数 -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find mbot_description)/urdf/xacro/gazebo/mbot_with_camera_gazebo.xacro'" /> \
    <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find mbot_description)/urdf/xacro/gazebo/mbot_whole.xacro'" /> \ -->
    <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find mbot_description)/urdf/urdf/robot.urdf'" /> \ -->
    

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model mrobot -param robot_description"/> 

    <!-- 启动darknet_ros的yolo检测-->
    <include file="$(find darknet_ros)/launch/darknet_ros.launch">
    </include>

    <!-- 启动监听订阅yolo检测话题的python --><!---->
    <node pkg="mrobot_gazebo" name="listener_yolo" type="listener_yolo.py" output="screen">
    </node>

        <!-- 将关节控制器的配置参数加载到参数服务器中 -->
    <rosparam file="$(find arm_car_gazebo)/config/arm_car_gazebo_control.yaml" command="load"/>
    <!-- <rosparam file="$(find mbot_gazebo)/config/controller_gazebo.yaml" command="load"/> -->

    <!-- 加载controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" ns="/arm" args="joint_state_controller
                                          joint1_position_controller
                                          joint2_position_controller
                                          joint3_position_controller
                                          joint4_position_controller
                                          joint5_position_controller
                                          joint6_position_controller"/>


    <!-- 加载test2设置的controllers -->
    <!-- <include file="$(find mbot_gazebo)/launch/arm_bringup_moveit.launch" /> -->

       <!-- 启动监听订阅yolo检测话题的python --><!---->
    <node pkg="arm_car_gazebo" name="arm_listener_yolo" type="arm_listener_yolo.py" output="screen">
    </node>

    <!-- <include file="$(find mbot_teleop)/launch/mbot_teleop.launch" /> -->
</launch>
